package lt.creditco.cupa.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientCardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCardAllPropertiesEquals(ClientCard expected, ClientCard actual) {
        assertClientCardAutoGeneratedPropertiesEquals(expected, actual);
        assertClientCardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCardAllUpdatablePropertiesEquals(ClientCard expected, ClientCard actual) {
        assertClientCardUpdatableFieldsEquals(expected, actual);
        assertClientCardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCardAutoGeneratedPropertiesEquals(ClientCard expected, ClientCard actual) {
        assertThat(actual)
            .as("Verify ClientCard auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCardUpdatableFieldsEquals(ClientCard expected, ClientCard actual) {
        assertThat(actual)
            .as("Verify ClientCard relevant properties")
            .satisfies(a -> assertThat(a.getMaskedPan()).as("check maskedPan").isEqualTo(expected.getMaskedPan()))
            .satisfies(a -> assertThat(a.getExpiryDate()).as("check expiryDate").isEqualTo(expected.getExpiryDate()))
            .satisfies(a -> assertThat(a.getCardholderName()).as("check cardholderName").isEqualTo(expected.getCardholderName()))
            .satisfies(a -> assertThat(a.getIsDefault()).as("check isDefault").isEqualTo(expected.getIsDefault()))
            .satisfies(a -> assertThat(a.getIsValid()).as("check isValid").isEqualTo(expected.getIsValid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCardUpdatableRelationshipsEquals(ClientCard expected, ClientCard actual) {
        assertThat(actual)
            .as("Verify ClientCard relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()));
    }
}
